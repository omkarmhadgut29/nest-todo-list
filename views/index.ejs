<!-- views/index.ejs -->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="css/index.css">
    <title> <% if (title) { %> <%= title %> <% } %> </title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
</head>

<body class=" ">
    <div class="container">
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <h1 class="">TODO List</h1>
            <input type="button" value="Add Todo" class="add-todo" onclick="addTodo()">
        </div>
        <table>
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Title</th>
                    <th>Description</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="todo-list">
                <!-- Todo items will be populated here using JS -->
            </tbody>
        </table>
    </div>

    <script>

        function deleteTodo(id, index) {
            fetch('/api/todo/' + id, {
                method: 'DELETE',
            })
                .then((response) => {
                    if (response.ok) {
                        const todoToRemove = document.getElementById('todo-' + id);
                        todoToRemove.remove();
                    }
                })
                .catch(error => {
                    console.error('Error deleting TODO:', error);
                });
        }

        function editTodo(todo) {
            postForm(`/update/${todo.id}`, todo, "post")
        }

        function addTodo() {
            location.replace("/add-todo")
        }

        function renderTodos(todos) {
            const todoList = document.getElementById('todo-list');
            todoList.innerHTML = '';
            let index = 1;
            todos.forEach(todo => {
                const tr = document.createElement('tr');
                tr.className = 'fade-in';
                tr.id = 'todo-' + todo.id;

                const tdId = document.createElement('td');
                tdId.textContent = index;
                tr.appendChild(tdId);

                const tdTitle = document.createElement('td');
                tdTitle.textContent = todo.title;
                tr.appendChild(tdTitle);

                const tdDescription = document.createElement('td');
                tdDescription.textContent = todo.description;
                tr.appendChild(tdDescription);

                const tdActions = document.createElement('td');
                const editButton = document.createElement('button');
                editButton.textContent = 'Edit';
                editButton.className = 'todo-edit-button';
                editButton.addEventListener('click', () => editTodo(todo));
                tdActions.appendChild(editButton);

                const deleteButton = document.createElement('button');
                deleteButton.textContent = 'Delete';
                deleteButton.className = 'todo-delete-button';
                deleteButton.addEventListener('click', () => {
                    Swal.fire({
                        title: 'Are you sure want to delete todo?',
                        text: "You won't be able to revert this!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Yes, delete it!"
                    }).then((result) => {
                        if (result.isConfirmed) {
                            deleteTodo(todo.id);
                            Swal.fire({
                                title: "Deleted!",
                                text: "TODO has been deleted.",
                                icon: "success"
                            });
                            return;
                        }
                    });
                });
                tdActions.appendChild(deleteButton);

                tr.appendChild(tdActions);

                todoList.appendChild(tr);
                index++;
            });
        }

        function submitForm() {
            console.log(document.forms)
            const form = document.forms[ "newForm" ];


        }
        function postForm(path, params, method) {
            method = method || 'post';

            var form = document.createElement('form');
            form.setAttribute('method', method);
            form.setAttribute('action', path);
            form.setAttribute("name", "newForm");
            // form.setAttribute('action', submitForm());

            for (var key in params) {
                if (params.hasOwnProperty(key)) {
                    var hiddenField = document.createElement('input');
                    hiddenField.setAttribute('type', 'hidden');
                    hiddenField.setAttribute('name', key);
                    hiddenField.setAttribute('value', params[ key ]);

                    form.appendChild(hiddenField);
                }
            }
            // console.log(form)

            document.body.appendChild(form);
            form.addEventListener("submit", function (event) {
                event.preventDefault();
            });
            form.submit();
        }

        function fetchTodos() {
            fetch('/api/todo')
                .then(response => response.json())
                .then(renderTodos)
                .catch(error => {
                    console.error('Error fetching TODOs:', error);
                });
        }

        fetchTodos();
    </script>
</body>

</html>